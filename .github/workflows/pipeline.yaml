# cicd pipeline that builds an image and pushes it to a registry and then deploys it to a k8s cluster using helm inside terraform

name: Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '00-images/**'
      - 'k8s/helm-chart/**'
  workflow_dispatch:

jobs:

    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and Push action
          uses: docker/build-push-action@v6
          with:
            context: ./api
            file: ./api/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/cetha:${{github.run_id}}
  
    update:
        runs-on: ubuntu-latest
        needs: build

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
                token: ${{ secrets.TOKEN }}

        - name: Update Helm chart
          run: |
                sed -i 's/tag: .*/tag: "${{github.run_id}}"/' k8s/helm-chart/cetha-api/values.yaml

        - name: Commit and push changes
          run: |
                git config --global user.email "yuteenightxi@gmail.com"
                git config --global user.name "Utibe Okon"
                git add k8s/helm-chart/cetha-api/values.yaml
                git commit -m "Update tag in Helm chart"
                git push
  
    deploy:
        runs-on: ubuntu-latest
        needs: update

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up environment variables
          run: |
            echo "TF_VAR_client_id=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
            echo "TF_VAR_client_secret=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "TF_VAR_subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
            echo "TF_VAR_tenant_id=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV

        - name: Install Terraform
          uses: hashicorp/setup-terraform@v3

        - name: Terraform Init
          run: | 
            terraform init
            echo $TF_VAR_subscription_id

        - name: Terraform Plan
          run: terraform plan

        - name: Terraform Apply
          run: terraform apply -auto-approve

    test:
        runs-on: ubuntu-latest
        needs: deploy

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Test endpoint
          run: |
            curl "https://www.google.com/"